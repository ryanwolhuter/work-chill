/* Global CSS variables */

:root {
  --header-height: 6rem;
  --circle-diameter: 340px;
  --background: #368c72;
  --header-text: #466551;
  --header-background: #e7eed2;
  --content: #e7eed2;
}

/* Sets the grid layout for the app */

 .App {
  width: 100vw;
  height: calc(100vh - var(--header-height));
  background: var(--background);

  display: grid;
  grid-template-rows: 1fr var(--circle-diameter) 1fr 1fr;
  grid-template-areas:
    "length-controls"
         "timer"
     "timer-controls"
          ".";
}

/* Header styles */

.header-wrapper {
  grid-area: header-wrapper;
  height: var(--header-height);
  display: flex;
  justify-content: center;
  align-items: center;
  background: var(--header-background);
}

.header {

  font-family: Roboto;
  font-style: normal;
  font-weight: normal;
  line-height: normal;
  font-size: 3rem;
  letter-spacing: 0.01em;

  color: var(--header-text);
  text-shadow: 0px 4px 4px rgba(70,101,81, 0.1);
}

/* Length control buttons styles */

.length-controls {
  grid-area: length-controls;
  min-width: var(--circle-diameter);
  display: flex;
  justify-self: center;
  justify-content: space-between;
  align-items: center;
}

.work-time {

  font-style: normal;
  font-weight: normal;
  line-height: normal;
  font-size: 1.5rem;
  letter-spacing: 0.01em;
  margin-bottom: 1rem;

  color: var(--content);

  text-shadow: 0px 4px 4px rgba(70,101,81, 0.1);
}

.chill-time {

  font-style: normal;
  font-weight: normal;
  line-height: normal;
  font-size: 1.5rem;
  letter-spacing: 0.01em;
  margin-bottom: 1rem;

  color: var(--content);

  text-shadow: 0px 4px 4px rgba(70,101,81, 0.1);
}

.length-control-buttons {
  display: flex;
  justify-content: center;
}

.work-minus {
  fill: var(--content);
  transform: scale(1.5);
  filter: drop-shadow(0px 4px 4px rgba(70,101,81, 0.1));
  margin-right: 1rem;
}

.work-plus {
  fill: var(--content);
  transform: scale(1.5);
  filter: drop-shadow(0px 4px 4px rgba(70,101,81, 0.1));
  margin-left: 1rem;
}

.chill-minus {
  fill: var(--content);
  transform: scale(1.5);
  filter: drop-shadow(0px 4px 4px rgba(70,101,81, 0.1));
  margin-right: 1rem;
}

.chill-plus {
  fill: var(--content);
  transform: scale(1.5);
  filter: drop-shadow(0px 4px 4px rgba(70,101,81, 0.1));
  margin-left: 1rem;

}

.length-button-clicked {
  animation: scale-out 300ms infinite ease-in-out;
}

@keyframes scale-out {
  0% {
    transform: scale(1.5);
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1.5);
    opacity: 1;
  }
}

/* Timer styles */

.indicator {
  margin-bottom: 7rem;

  grid-area: timer;
  justify-self: center;
  align-self: center;

  font-style: normal;
  font-weight: bold;
  line-height: normal;
  font-size: 1.5rem;
  letter-spacing: 0.01em;

  color: var(--content);

  text-shadow: 0px 4px 4px rgba(70,101,81, 0.1);
}

.timer {
  width: 163px;
  height: 58px;

  grid-area: timer;
  justify-self: center;
  align-self: center;

  font-style: normal;
  font-weight: normal;
  line-height: normal;
  font-size: 4rem;
  letter-spacing: 0.01em;

  color: var(--content);

  text-shadow: 0px 4px 4px rgba(70,101,81, 0.1);
}

/* Timer spinning circle styles */

.circle {
  width: var(--circle-diameter);
  height: var(--circle-diameter);
  stroke: var(--content);
  stroke-width: 8;
  grid-area: timer;
  justify-self: center;
  align-self: center;
}

.spinner {
  width: var(--circle-diameter);
  height: var(--circle-diameter);
  grid-area: timer;
  justify-self: center;
  align-self: center;
}

.animated-circle {
  stroke: var(--content);
  stroke-width: 8;
  stroke-dasharray: 1068;
  stroke-linecap: round;
  transform-origin:
    calc(var(--circle-diameter) / 2)
    calc(var(--circle-diameter) / 2) 0;
  animation: spinner 9s linear infinite,
    color 9s ease-in-out infinite;
  animation-direction: normal;
  grid-area: timer;
  justify-self: center;
  align-self: center;
}

@keyframes spinner {
  0% {
    stroke-dashoffset: 34;
    transform: rotate(0deg);
  }
  50% {
    stroke-dashoffset: 1068;
    transform: rotate(720deg);
  }
  100% {
    stroke-dashoffset: 34;
    transform: rotate(1080deg)
  }
}

@keyframes color {
  100%,
  0% {
    stroke: #e7eed2;
  }
  5% {
    stroke: #DCEACD;
  }
  10% {
    stroke: #D2E7C8;
  }
  15% {
    stroke: #C7E3C3;
  }
  20% {
    stroke: #BDE0BE;
  }
  25% {
    stroke: #B2DCB9;
  }
  30% {
    stroke: #A8D9B4;
  }
  35% {
    stroke: #9DD5AF;
  }
  40% {
    stroke: #93D2AA;
  }
  45% {
    stroke: #88CEA5;
  }
  50% {
    stroke: #7ECBA1;
  }
  55% {
  stroke: #88CEA5;
  }
  60% {
  stroke: #93D2AA;
  }
  65% {
    stroke: #9DD5AF;
  }
  70% {
    stroke: #A8D9B4;
  }
  75% {
    stroke: #B2DCB9;
  }
  80% {
    stroke: #BDE0BE;
  }
  85% {
    stroke: #C7E3C3;
  }
  90% {
    stroke: #D2E7C8;
  }
  95% {
    stroke: #DCEACD;
  }
}

/* Timer control buttons styles */

.timer-controls {
  grid-area: timer-controls;
  min-width: var(--circle-diameter);
  justify-self: center;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-areas: "play-pause reset"
}

.play-pause {
  grid-area: play-pause;
  width: 92px;
  height: 92px;
  fill: var(--content);
  filter: drop-shadow(0px 4px 4px rgba(70,101,81, 0.1));
  justify-self: start;
  align-self: center;
}

.play-pause-enter {
  transform: scale(0);
}

.play-pause-enter-active {
  transform: scale(1);
  transition: all 200ms;
}

.play-pause-exit {
  transform: scale(1);
}

.play-pause-exit-active {
  transform: scale(0);
  transition: all 200ms;
}

.reset {
  grid-area: reset;
  width: 92px;
  height: 92px;
  fill: var(--content);
  filter: drop-shadow(0px 4px 4px rgba(70,101,81, 0.1));
  justify-self: end;
  align-self: center;
}

.reset-clicked {
  animation: reset-rotate 1s
}

@keyframes reset-rotate {
  from {
    transform: rotate(360deg)
  }
  to {
    transform: rotate(0deg)
  }
}
